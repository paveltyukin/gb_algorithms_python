'''
6. В одномерном массиве найти сумму элементов, находящихся между минимальным и максимальным элементами. 
Сами минимальный и максимальный элементы в сумму не включать.
'''

import random
N = 15

# Вариант 1 (Чуть длиннее)

# Определяю рабочий список
work_list = [random.randint(0, 100) for _ in range(N)]

# Определяю индексы
# минимального и максимального элементов
min_n = 0
max_n = 0

# Прохожусь по 
for key, value in enumerate(work_list):

    # Определяю рабочий список
    if work_list[key] < work_list[min_n]:
        min_n = key
    
    # Определяю рабочий список
    if work_list[key] > work_list[max_n]:
        max_n = key

# Получил минимальный и максимальный номер элемента.
# Определяю дополнительную переменную для проверки
# порядка возрастания переменных min_n, max_n
mn_to_mx = False
if max_n > min_n:
    mn_to_mx = True

# Определяю переменную для суммы элементов согласно условию
sum_el = 0

# Вывожу исходный список
print(work_list)

# Вывожу индексы и значения
# минимальных и максимальных элементов
print(f'Порядковый номер минимального элемента {work_list[min_n]} равен: {min_n + 1}\n\
Порядковый номер максимального элемента {work_list[max_n]} равен: {max_n + 1}')

# Если минимальный элемент идет первым от начала списка,
# то оставляю его на первом месте + 1, потому что его включать не нужно
# Аналогично, если max_n идет первым.
for i in range(min_n + 1 if mn_to_mx else max_n + 1, max_n if mn_to_mx else min_n):

    # Складываю все элементы, согласно условию
    sum_el += work_list[i]

# Вывожу результат
print(sum_el)